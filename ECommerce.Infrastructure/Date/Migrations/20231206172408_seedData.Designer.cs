// <auto-generated />
using ECommerce.Infrastructure.Date;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ECommerce.Infrastructure.Date.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231206172408_seedData")]
    partial class seedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ECommerce.Core.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "C1",
                            Name = "Category 1"
                        },
                        new
                        {
                            Id = 2,
                            Description = "C2",
                            Name = "Category 2"
                        },
                        new
                        {
                            Id = 3,
                            Description = "C3",
                            Name = "Category 3"
                        },
                        new
                        {
                            Id = 4,
                            Description = "C4",
                            Name = "Category 4"
                        });
                });

            modelBuilder.Entity("ECommerce.Core.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "P1",
                            Name = "Product 1",
                            Price = 2000m
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "P2",
                            Name = "Product 2",
                            Price = 3000m
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            Description = "P3",
                            Name = "Product 3",
                            Price = 2500m
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 3,
                            Description = "P4",
                            Name = "Product 4",
                            Price = 4000m
                        });
                });

            modelBuilder.Entity("ECommerce.Core.Entities.Product", b =>
                {
                    b.HasOne("ECommerce.Core.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ECommerce.Core.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
